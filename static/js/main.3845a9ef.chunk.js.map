{"version":3,"sources":["components/Section/Section.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","services/contactsAPI.js","redux/contacts/contactsOperations.js","redux/contacts/contactsReducer.js","redux/store.js","redux/contacts/contactsSelectors.js","components/Section/Section.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","fetchAllContacts","a","axios","get","data","console","log","postContact","name","number","post","deleteContactById","id","delete","defaults","baseURL","fetchContacts","createAsyncThunk","_","rejectWithValue","contacts","fetchAddContact","contact","fetchDeleteContact","changeFilter","createAction","items","createReducer","fulfilled","payload","state","filter","isLoading","pending","rejected","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Section","title","children","className","styles","section","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleCreateContact","e","currentTarget","value","reset","nameId","shortid","generate","numberId","s","form","onSubmit","preventDefault","find","alert","htmlFor","type","onChange","pattern","required","button","Filter","label","input","placeholder","Contacts","useEffect","length","list","map","item","position","onClick","notification","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,yB,mBCA1BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,uB,mBCArDD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,8LCGjD,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,IAAMC,IAAN,aADlB,uBACGC,EADH,EACGA,KAERC,QAAQC,IAAR,UAAuBF,GAHlB,kBAKEA,GALF,4C,sBAQA,SAAeG,EAAtB,oC,4CAAO,WAA2BC,EAAMC,GAAjC,iBAAAR,EAAA,sEACkBC,IAAMQ,KAAN,YAAwB,CAAEF,OAAMC,WADlD,uBACGL,EADH,EACGA,KAERC,QAAQC,IAAR,UAAuBF,GAHlB,kBAKEA,GALF,4C,sBAQA,SAAeO,EAAtB,kC,4CAAO,WAAiCC,GAAjC,SAAAX,EAAA,sEACCC,IAAMW,OAAN,oBAA0BD,IAD3B,cAGLP,QAAQC,IAAR,UAAuBM,GAHlB,kBAKEA,GALF,4C,sBAlBPV,IAAMY,SAASC,QAAU,wBCKlB,I,IAAMC,EAAgBC,YAC3B,uBAD2C,uCAE3C,WAAOC,EAAP,oBAAAjB,EAAA,6DAAYkB,EAAZ,EAAYA,gBAAZ,kBAE2BnB,IAF3B,cAEUoB,EAFV,yBAGWA,GAHX,yDAKWD,EAAgB,EAAD,KAL1B,yDAF2C,yDAYhCE,EAAkBJ,YAC7B,sBAD6C,uCAE7C,qCAAAhB,EAAA,6DAASO,EAAT,EAASA,KAAMC,EAAf,EAAeA,OAAYU,EAA3B,EAA2BA,gBAA3B,kBAE0BZ,EAAYC,EAAMC,GAF5C,cAEUa,EAFV,yBAGWA,GAHX,yDAKWH,EAAgB,EAAD,KAL1B,yDAF6C,yDAYlCI,EAAqBN,YAChC,yBADgD,uCAEhD,WAAOL,EAAP,oBAAAX,EAAA,6DAAakB,EAAb,EAAaA,gBAAb,kBAE0BR,EAAkBC,GAF5C,cAEUU,EAFV,yBAGWA,GAHX,yDAKWH,EAAgB,EAAD,KAL1B,yDAFgD,yDAYrCK,EAAeC,YAAa,mBClCnCC,EAAQC,YAAc,IAAD,mBACxBX,EAAcY,WAAY,SAACV,EAAD,YAAMW,WADR,cAExBR,EAAgBO,WAAY,SAACE,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAFvC,cAGxBN,EAAmBK,WAAY,SAACE,EAAD,OAAUD,EAAV,EAAUA,QAAV,OAC9BC,EAAMC,QAAO,qBAAGnB,KAAgBiB,QAJT,IAOrBE,EAASJ,YAAc,GAAD,eACzBH,GAAe,SAACN,EAAD,YAAMW,YAGlBG,EAAYL,aAAc,GAAD,mBAC5BX,EAAciB,SAAU,kBAAM,KADF,cAE5BjB,EAAcY,WAAY,kBAAM,KAFJ,cAG5BZ,EAAckB,UAAW,kBAAM,KAHH,cAI5Bb,EAAgBY,SAAU,kBAAM,KAJJ,cAK5BZ,EAAgBO,WAAY,kBAAM,KALN,cAM5BP,EAAgBa,UAAW,kBAAM,KANL,cAO5BX,EAAmBU,SAAU,kBAAM,KAPP,cAQ5BV,EAAmBK,WAAY,kBAAM,KART,cAS5BL,EAAmBW,UAAW,kBAAM,KATR,IAYhBC,cAAgB,CAAET,QAAOK,SAAQC,cC5B1CI,EAAU,sBAAOC,eAAP,CAA+BC,MAQhCC,EANDC,YAAe,CAC3BC,QAAS,CAAErB,SAAUqB,GACrBL,aACAM,UAAUC,I,iCCPCC,EAAc,SAAAd,GAAK,OAAIA,EAAMV,SAASM,OACtCmB,EAAY,SAAAf,GAAK,OAAIA,EAAMV,SAASW,QAEpCe,EAAqBC,YAChC,CAACH,EAAaC,IACd,SAACzB,EAAUW,GACT,IAAMiB,EAAmBjB,EAAOkB,cAEhC,OAAO7B,EAASW,QAAO,qBAAGvB,KACnByC,cAAcC,SAASF,S,wBCGnBG,EAXC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,iBCsFQI,EAlFF,WACX,MAAwBC,mBAAS,IAAjC,mBAAOlD,EAAP,KAAamD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOjD,EAAP,KAAemD,EAAf,KACMxC,EAAWyC,YAAYjB,GACvBkB,EAAWC,cAEXC,EAAsB,SAAAC,GAC1B,MAAwBA,EAAEC,cAAlB1D,EAAR,EAAQA,KAAM2D,EAAd,EAAcA,MAEd,OAAQ3D,GACN,IAAK,OACH,OAAOmD,EAAQQ,GAEjB,IAAK,SACH,OAAOP,EAAUO,KAkBjBC,EAAQ,WACZT,EAAQ,IACRC,EAAU,KAGNS,EAASC,IAAQC,WACjBC,EAAWF,IAAQC,WAEzB,OACE,cAAC,EAAD,CAASnB,MAAM,YAAf,SACE,uBAAME,UAAWmB,IAAEC,KAAMC,SArBR,SAAAV,GAGnB,GAFAA,EAAEW,iBAEExD,EAASyD,MAAK,SAAAvD,GAAO,OAAIA,EAAQd,OAASA,KAC5C,OAAOsE,MAAM,GAAD,OAAItE,EAAJ,oCAGdsD,EAASzC,EAAgB,CAAEb,OAAMC,YACjC2D,KAaE,UACE,wBAAOW,QAASV,EAAhB,iBAEE,uBACEW,KAAK,OACLxE,KAAK,OACL2D,MAAO3D,EACPyE,SAAUjB,EACVkB,QAAQ,yHACR9B,MAAM,kcACNxC,GAAIyD,EACJc,UAAQ,OAGZ,wBAAOJ,QAASP,EAAhB,mBAEE,uBACEQ,KAAK,MACLxE,KAAK,SACL2D,MAAO1D,EACPwE,SAAUjB,EACVkB,QAAQ,yFACR9B,MAAM,giBACNxC,GAAI4D,EACJW,UAAQ,OAGZ,wBAAQH,KAAK,SAAS1B,UAAWmB,IAAEW,OAAnC,mC,iBCjDOC,EAxBA,WACb,IAAMtD,EAAS8B,YAAYhB,GACrBiB,EAAWC,cAEjB,OACE,wBAAOT,UAAWmB,IAAEa,MAApB,kCAEE,uBACEhC,UAAWmB,IAAEc,MACb/E,KAAK,SACLwE,KAAK,OACLQ,YAAY,oBACZrB,MAAOpC,EACPkD,SAAU,SAAAhB,GAAC,OAAIH,EAAStC,EAAayC,EAAEC,cAAcC,e,mBCoC9CsB,GA5CE,WACf,IAAMrE,EAAWyC,YAAYf,GACvBgB,EAAWC,cAMjB,OAJA2B,qBAAU,WACR5B,EAAS9C,OACR,CAAC8C,IAGF,cAAC,EAAD,CAASV,MAAM,WAAf,SACuB,IAApBhC,EAASuE,OACR,oBAAIrC,UAAWmB,KAAEmB,KAAjB,SACGxE,EAASyE,KAAI,SAAAvE,GACZ,IAAQV,EAAqBU,EAArBV,GAAIJ,EAAiBc,EAAjBd,KAAMC,EAAWa,EAAXb,OAElB,OACE,qBAAI6C,UAAWmB,KAAEqB,KAAjB,UACE,sBAAKxC,UAAWmB,KAAEsB,SAAlB,UACE,iCAAOvF,EAAP,OACA,+BAAOC,OAET,wBACE6C,UAAWmB,KAAEW,OACbJ,KAAK,SACLgB,QAAS,kBAAMlC,EAASvC,EAAmBX,KAH7C,sBAL0BA,QAiBlC,mBAAG0C,UAAWmB,KAAEwB,aAAhB,qCCzCO,SAASC,KACtB,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,O,YCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU9D,MAAOA,EAAjB,SACE,cAAC2D,GAAD,QAGJI,SAASC,eAAe,U,kBCb1BzG,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,yBAAyB,aAAe,+BAA+B,SAAW,8B","file":"static/js/main.3845a9ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3V4Zi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2nI1A\",\"button\":\"Form_button__2tvD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label___jGbV\",\"input\":\"Filter_input__3Pbsz\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3030';\n\nexport async function fetchAllContacts() {\n  const { data } = await axios.get(`/contacts`);\n\n  console.log(`data >>`, data);\n\n  return data;\n}\n\nexport async function postContact(name, number) {\n  const { data } = await axios.post(`/contacts`, { name, number });\n\n  console.log(`data >>`, data);\n\n  return data;\n}\n\nexport async function deleteContactById(id) {\n  await axios.delete(`/contacts/${id}`);\n\n  console.log(`data >>`, id);\n\n  return id;\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit';\nimport {\n  fetchAllContacts,\n  postContact,\n  deleteContactById,\n} from 'services/contactsAPI';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/getContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await fetchAllContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchAddContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, { rejectWithValue }) => {\n    try {\n      const contact = await postContact(name, number);\n      return contact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const fetchDeleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id, { rejectWithValue }) => {\n    try {\n      const contact = await deleteContactById(id);\n      return contact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  },\n);\n\nexport const changeFilter = createAction('contacts/filter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n  changeFilter,\n} from './contactsOperations';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [fetchAddContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [fetchDeleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [fetchAddContact.pending]: () => true,\n  [fetchAddContact.fulfilled]: () => false,\n  [fetchAddContact.rejected]: () => false,\n  [fetchDeleteContact.pending]: () => true,\n  [fetchDeleteContact.fulfilled]: () => false,\n  [fetchDeleteContact.rejected]: () => false,\n});\n\nexport default combineReducers({ items, filter, isLoading });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport reducer from './contacts/contactsReducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: { contacts: reducer },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = { title: PropTypes.string.isRequired };\r\n\r\nexport default Section;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport shortid from 'shortid';\r\n\r\nimport { getContacts } from 'redux/contacts/contactsSelectors';\r\nimport { fetchAddContact } from 'redux/contacts/contactsOperations';\r\nimport Section from 'components/Section';\r\n\r\n// import PropTypes from 'prop-types';\r\nimport s from './Form.module.css';\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreateContact = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n\r\n      case 'number':\r\n        return setNumber(value);\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      return alert(`${name} is already in the contact list`);\r\n    }\r\n\r\n    dispatch(fetchAddContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const nameId = shortid.generate();\r\n  const numberId = shortid.generate();\r\n\r\n  return (\r\n    <Section title=\"Phonebook\">\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label htmlFor={nameId}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleCreateContact}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            id={nameId}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor={numberId}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleCreateContact}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            id={numberId}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add new contact\r\n        </button>\r\n      </form>\r\n    </Section>\r\n  );\r\n};\r\n\r\n// Form.propTypes = {\r\n//   contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n//   fetchAddContact: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Form;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from 'redux/contacts/contactsOperations';\r\nimport { getFilter } from 'redux/contacts/contactsSelectors';\r\n\r\n// import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        placeholder=\"Type contact name\"\r\n        value={filter}\r\n        onChange={e => dispatch(changeFilter(e.currentTarget.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\n// Filter.propTypes = {\r\n//   filter: PropTypes.string.isRequired,\r\n//   changeFilter: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from 'redux/contacts/contactsSelectors';\r\nimport {\r\n  fetchContacts,\r\n  fetchDeleteContact,\r\n} from 'redux/contacts/contactsOperations';\r\n\r\nimport Section from 'components/Section';\r\n// import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nconst Contacts = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Section title=\"Contacts\">\r\n      {contacts.length !== 0 ? (\r\n        <ul className={s.list}>\r\n          {contacts.map(contact => {\r\n            const { id, name, number } = contact;\r\n\r\n            return (\r\n              <li className={s.item} key={id}>\r\n                <div className={s.position}>\r\n                  <span>{name}:</span>\r\n                  <span>{number}</span>\r\n                </div>\r\n                <button\r\n                  className={s.button}\r\n                  type=\"button\"\r\n                  onClick={() => dispatch(fetchDeleteContact(id))}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p className={s.notification}>No contacts found :(</p>\r\n      )}\r\n    </Section>\r\n  );\r\n};\r\n\r\n// Contacts.propTypes = {\r\n// contacts: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired)),\r\n// fetchDeleteContact: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Contacts;\r\n","import Form from 'components/Form';\nimport Filter from 'components/Filter';\nimport Contacts from 'components/Contacts';\n\nexport default function App() {\n  return (\n    <>\n      <Form />\n      <Filter />\n      <Contacts />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from 'App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3-hwD\",\"item\":\"Contacts_item__3HfDq\",\"button\":\"Contacts_button__1BNz9\",\"notification\":\"Contacts_notification__1bYrG\",\"position\":\"Contacts_position__1TFAk\"};"],"sourceRoot":""}